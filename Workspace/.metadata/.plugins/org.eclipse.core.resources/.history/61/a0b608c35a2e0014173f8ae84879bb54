package edu.neumont.csc252;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class BfsGraphTraversal {

	public List<List<Integer>> traverse(Graph g){

		List<List<Integer>> list = new ArrayList<>();

		List<Integer> list2 = new ArrayList<Integer>();

		Queue<Integer> queue = new LinkedList<Integer>();
		queue.offer(0);
		g.setMark(0, 1);
		int v;
		for (v=0; v < g.vcount(); v++) {
			g.setMark(v, 0);
		}

		while () {
			
			while (queue.size() > 0){
				v = queue.poll();
				if(list2.size() == 0)
				{
					list2.add(v);
					g.setMark(v,1);
				}


				for (int w = g.first(v); w < g.vcount(); w = g.next(v, w)) {

					if (g.getMark(w) == 0){
						g.setMark(w, 1);
						queue.add(w);
						list2.add(w);
					}
				}

			}
			list.add(list2);
		}
		return list;
	}









}
