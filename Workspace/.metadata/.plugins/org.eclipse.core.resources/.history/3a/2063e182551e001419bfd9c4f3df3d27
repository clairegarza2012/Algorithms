package edu.neumont.csc250;

public class InsertBinaryTree<T extends Comparable<T>> {

	public boolean insert(T data){
		
		TreeNode root = new TreeNode(5);
				
		if (root == null)
			return false;
		
		insert(root, null, data);
		
		return true;
	}
	
	private void insert(TreeNode root, TreeNode parent, T k){
		
		if (root == null){
			return;
		}
		
		if (root.isLeaf){
			if (root.compareTo(k) > 0){
				root.leftDecsendent = new TreeNode(k);
			}
			else if (root.compareTo(k) < 0){
				root.rightDecsendent = new TreeNode(k);
			}
		}
		
		if (root.compareTo(k) > 0){
			
			if (parent == null){
				parent = root;
			}
			insert(root.leftDecsendent, parent, k);
		}
		else if (root.compareTo(k) < 0){
			
			if (parent == null){
				parent = root;
			}
			insert(root.rightDecsendent, parent, k);
		}
		else{
			return;
		}
		
	}
}
