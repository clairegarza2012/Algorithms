package edu.neumont.csc250;

import java.util.ArrayList;
import java.util.List;

public class QuickSorter<T extends Comparable<T>> implements Sorter<T>{

	@Override
	public void sort(List<T> unsorted) {

		sortHelper(unsorted);
	}

	private void sortHelper(List<T> original, int low, int high){

		if (original.size() <= 1)
			return;

		int pivotIndex = 0;
		T pivot = original.get(pivotIndex);
		original.set(pivotIndex, original.get(original.size() - 1));
		original.set(original.size() - 1, pivot);
		
		int upIndex = 0;
		int downIndex = original.size();
		for(int i = 0; i < original.size() - 1; i++){
			for (int j = original.size() - 1; j > 0 ; i--){
				if (original.get(i).compareTo(pivot) < 0 && original.get(i).compareTo(pivot) > 0){
					T temp2 = original.get(i);
					original.set(i, original.get(j));
					original.set(j, temp2);
				}else if (original.get(i).compareTo(pivot) == 0){
					
				}else if (i >= j){
					
				}
			}
		}
		//sortHelper(original, left);
		//sortHelper(original, right);


	}

}
