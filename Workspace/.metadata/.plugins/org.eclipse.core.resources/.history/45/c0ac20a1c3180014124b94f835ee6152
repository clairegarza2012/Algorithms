package edu.neumont.csc250;

import java.util.ArrayList;
import java.util.List;

public class QuickSorter<T extends Comparable<T>> implements Sorter<T>{

	@Override
	public void sort(List<T> unsorted) {

		sortHelper(unsorted, unsorted);
	}
	
	private void sortHelper(List<T> original, List<T> partial){
		
		if (partial.size() <= 1)
			return;
		
		int pivotIndex = partial.size() / 2;
		T pivot = partial.get(pivotIndex);
		
		List<T> left = new ArrayList<T>();
		List<T> right = new ArrayList<T>();

		T temp = partial.get(pivotIndex);
		partial.set(pivotIndex, partial.get(partial.size() - 1));
		partial.set(partial.size() - 1, temp);
		
		for(int i = 0; i < partial.size() - 1; i++){
			if (partial.get(i).compareTo(pivot) < 0){
				left.add(partial.get(i));
			}else if (partial.get(i).compareTo(pivot) > 0){
				right.add(partial.get(i));
			}else{
				
			}
		}
		sortHelper(original, left);
		sortHelper(original, right);
		
		
	}

}
