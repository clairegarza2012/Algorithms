package edu.neumont.csc252.test;

import java.awt.image.BufferedImage;
import java.awt.image.DataBufferByte;
import java.awt.image.WritableRaster;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.PriorityQueue;

import javax.imageio.ImageIO;
import org.junit.Test;
import edu.neumont.csc252.FrequencyNode;
import edu.neumont.csc252.HuffmanCompressor;
import edu.neumont.csc252.HuffmanTree;
import edu.neumont.io.Bits;

public class HuffmanTreeTest {

	@Test
	public void test() {

		// Reads the bytes from a file and stores into byte[]
		/* <----------------------------------------------------------------------------> */
		byte[] compressedBytes = null;
		
		try {
			compressedBytes = Files.readAllBytes(Paths.get("compressed.huff"));
		} catch (IOException e2) {
			e2.printStackTrace();
		}
		System.out.println(compressedBytes.toString());
		/* <----------------------------------------------------------------------------> */
		
		// Decompresses the bytes from above
		/* <----------------------------------------------------------------------------> */
		HuffmanTree tree = new HuffmanTree();

		HuffmanCompressor compressor = new HuffmanCompressor();

		byte[] bytes2 = compressor.decompress(tree, 54679, compressedBytes);
		/* <-----------------------------------------------------------------------------> */
		
		System.out.println("Original Length: " + 54679 + " Compressed Length:" + compressedBytes.length);
		
		// Attempts to convert the decompressed bytes to an Image
		/* <-----------------------------------------------------------------------------> */
		try {
			Files.write(Paths.get("C:/newImage.jpg"), bytes2);			
		} catch (Exception e) {
			e.printStackTrace();
		}
		/* <----------------------------------------------------------------------------> */

	}
}
