package edu.neumont.csc250;

public class InsertBinaryTree<T extends Comparable<T>> {

	TreeNode<T> root;
	
	public boolean insert(T data){
						
		if (root == null){
			root = new TreeNode<T>(data);
		}
		
		insert(root, null, data);
		
		return true;
	}
	
	private void insert(TreeNode<T> root, TreeNode<T> parent, T k){
		
		if (root == null){
			return;
		}
		
		if (root.isLeaf){
			TreeNode<T> newNode = new TreeNode(k);
			newNode.isLeaf = true;
			if (root.compareTo(k) > 0){
				root.leftDecsendent = newNode;
				root.isLeaf = false;
			}
			else if (root.compareTo(k) < 0){
				root.rightDecsendent = newNode;
				root.isLeaf = false;
			}
		}
		
		if (root.compareTo(k) > 0){
			
			if (parent == null){
				parent = root;
			}
			insert(root.leftDecsendent, parent, k);
		}
		else if (root.compareTo(k) < 0){
			
			if (parent == null){
				parent = root;
			}
			insert(root.rightDecsendent, parent, k);
		}
		else{
			return;
		}
		
	}
}
