package edu.neumont.csc250;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import edu.neumont.csc250.lab4.Book;
import edu.neumont.csc250.lab4.Bookcase;

public class DynamicShelver implements Shelver{
	
	@Override
	public void shelveBooks(Bookcase bookcase, List<Book> books) {
		
		QuickSorter<Book> sorter = new QuickSorter<Book>();
		sorter.sort(books);
		
		shelveBooksHelper(bookcase, books, bookcase.getShelfWidth());
	}

	private void shelveBooksHelper(Bookcase bookcase, List<Book> books, int bookshelfWidth) {

		int[][]  array = new int[books.size()][books.size()];
		int[] costArray = new int[books.size() + 1];
		int[] positionArray = new int[books.size() + 1];
		
		int max = (int) Math.sqrt(Integer.MAX_VALUE);
		
		for (int i = 1; i <= books.size(); i++){
			array[i][i] = bookshelfWidth - books.get(i - 1).getWidth();
			
			for (int j = i + 1; j <= books.size(); j++){
				array[i][j] = array[i][j-1] - books.get(j - 1).getWidth() - 1;
			}
		}
		
		costArray[0] = 0;
		for (int i = 1; i <= books.size(); i++){
			cost[i] = 
		}
	}

}
