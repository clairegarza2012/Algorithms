package edu.neumont.csc252.test;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Arrays;

import org.junit.Test;

import edu.neumont.csc252.HuffmanCompressor;
import edu.neumont.csc252.HuffmanTree;

public class HuffmanTreeTest {

	@Test
	public void testCompress() {
		byte[] message = "Four score...".getBytes();//{ 45, 56, 67, 78, 89, 12, 23, 34, 45, 67, 45, 23, 45 };
		HuffmanTree tree = new HuffmanTree(message);
		HuffmanCompressor hc = new HuffmanCompressor();
		byte[] compressed = hc.compress(tree, message);
		System.out.println(compressed.length/message.length);
		byte[] decompressed = hc.decompress(tree, message.length, compressed);
		System.out.println(Arrays.toString(decompressed));
		System.out.println(new String(decompressed));
	}
	
	@Test
	public void test1() throws Exception {
		
//		String string = "Hello World!";//"Hello World!";
//		byte[] originalBytes = string.getBytes();//Files.readAllBytes(Paths.get("jcMessage.png"));//string.getBytes();
//		
//		HuffmanTree tree = new HuffmanTree(originalBytes);
//		
//		HuffmanCompressor hm = new HuffmanCompressor();
//		byte[] compressedBytes = hm.compress(tree, originalBytes);
//		byte[] decompressedBytes = hm.decompress(tree, string.length()*2, compressedBytes);
//
//		for (int i = 0; i < originalBytes.length; i++){
//
//			System.out.println(i + ": " + (char)originalBytes[i] + " " + (char)decompressedBytes[i]);
//		}
//		
//		System.out.println(Arrays.toString(decompressedBytes));
		
	}
	
	@Test
	public void test() {

		// Reads the bytes from a file and stores into byte[]
		/* <----------------------------------------------------------------------------> */
		byte[] compressedBytes = null;
		
		try {
			compressedBytes = Files.readAllBytes(Paths.get("compressed.huff"));
		} catch (IOException e2) {
			e2.printStackTrace();
		}
		/* <----------------------------------------------------------------------------> */
		
		// Decompresses the bytes from above
		/* <----------------------------------------------------------------------------> */
		HuffmanTree tree = new HuffmanTree();

		HuffmanCompressor compressor = new HuffmanCompressor();

		byte[] bytes2 = compressor.decompress(tree, 54679, compressedBytes);
		/* <-----------------------------------------------------------------------------> */
		
		System.out.println("Original Length: " + 54679 + " Compressed Length:" + compressedBytes.length);
		
		// Attempts to convert the decompressed bytes to an Image
		/* <-----------------------------------------------------------------------------> */
		try {
			Files.write(Paths.get("C:/newImage.jpg"), bytes2);			
		} catch (Exception e) {
			e.printStackTrace();
		}
		/* <----------------------------------------------------------------------------> */

	}
}
